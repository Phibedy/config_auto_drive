<lms>
    <module name="lap_time" lib="lap_time" class="LapTime">
        <channelMapping from="ENVIRONMENT" to="ENVIRONMENT_OBSTACLE"/>
    </module>
    <!--module name="pause_runtime" lib="pause_runtime" class="PauseRuntime">
    </module -->
    <include src="trajectory_creation.xml"/>
    <include src="trajectory_controller.xml"/>
    <!--lidar obstacle detection -->
    <module name="obstacle_from_pointcloud" lib="obstacle_from_pointcloud" class="ObstacleFromPointCloud">
        <channelMapping from="POINT_CLOUD" to="POINT_CLOUD_FILTERED"/>
        <channelMapping from="ENVIRONMENT" to="ENVIRONMENT_OBSTACLE_LIDAR"/>
        <config>
        <minBlobElements>3</minBlobElements>
        </config>
    </module>
    <module name="street_obstacle_master" lib="street_obstacle_merger" class="StreetObjectMaster">
        <name>street_obstacle_merger</name>
        <channelMapping priority="10" from="CAR" to="CAR"/>
        <channelMapping from="ENVIRONMENT_OUTPUT" to="ENVIRONMENT_MASTER"/>
        <config src="street_utils/obstacle.lconf"/>
        <config>
            <input_environments>ENVIRONMENT_OBSTACLE_LIDAR,ENVIRONMENT_OBSTACLE_CAM,ENVIRONMENT_CROSSING</input_environments>
        </config>
    </module>
    <module name="pointcloud_filter" lib="obstacle_from_pointcloud" class="PointCloudFilter">
        <channelMapping from="NEW_DATA" to="NEW_HOKYUO_LIDAR_DATA"/>
        <channelMapping from="POINT_CLOUD_IN" to="HOKUYO_LIDAR_DATA"/>
        <channelMapping from="POINT_CLOUD_OUT" to="POINT_CLOUD_FILTERED"/>
    </module>
</lms>
