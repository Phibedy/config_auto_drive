<framework>
	<execution>
		<maxThreadCount> 1 </maxThreadCount>
		<clock enabled="true" unit="ms">1000</clock>
	</execution>
	<modulesToEnable>
		<module logLevel="WARN">camera_importer</module>
		<module logLevel="WARN">ogre_window_manager</module>
		<module>image_hint_worker</module>
		<module>image_loader</module>
		<module logLevel="WARN">image_renderer_gauss</module>
		<module logLevel="WARN">image_renderer_sobelX</module>
		<module logLevel="WARN">image_renderer_sobelY</module>
		<module logLevel="WARN">image_converter_sobelX</module>
		<module logLevel="WARN">image_converter_sobelY</module>
		<module logLevel="WARN">image_logger</module>
	</modulesToEnable>
	<module>
	    <name>image_loader</name>
	    <config>
	        <format>pgm</format>
	        <loadSingleFile>true</loadSingleFile>
	        <singleFile>/home/phibedy/Dokumente/programmieren/lms_repos/config_image_detection/testImages/0000.pgm</singleFile>
	    </config>
		<channelMapping from="IMAGE" to="GAUSS_IMAGE"/>
	</module>
	<module>
		<name>image_logger</name>
		<config>
		    <directory>/home/phibedy/Dokumente/programmieren/lms_repos/config_image_detection/testImages</directory>
		    <filepattern>%04i</filepattern>
		</config>
		<channelMapping from="IMAGE" to="SOBELX_IMAGE"/>
	</module>
	<module>
		<name>ogre_window_manager</name>
	</module>
	<module>
		<name>image_renderer_grey</name>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>
		<channelMapping from="IMAGE" to="GREY_IMAGE"/>
	</module>
	<module>
		<name>image_renderer_debug</name>
		<writePriority>2</writePriority>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>
		<channelMapping from="IMAGE" to="DEBUG_IMAGE"/>
		<config>
		    <WINDOW>SOBELX_IMAGE_W</WINDOW>
		</config>
	</module>
	<module>
		<name>image_renderer_debug2</name>
		<writePriority>2</writePriority>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>
		<channelMapping from="IMAGE" to="DEBUG_IMAGE"/>
	</module>
	<module>
		<name>image_converter</name>
	    <channelMapping from="INPUT_IMAGE" to="IMAGE"/>
	    <channelMapping from="OUTPUT_IMAGE" to="GREY_IMAGE"/>
	    <config>
		    <output_format>GREY</output_format>
	    </config>
	</module>
	<module>
	    <name>image_hint_worker</name>
	</module>
	<module>
		<name>camera_importer</name>
		<config src="camera_importer.lconf"/>
	</module>
	<module>
		<name>image_converter_gauss</name>
		<libname>image_converter</libname>
		<libpath>image_converter</libpath>
	    <channelMapping from="INPUT_IMAGE" to="GREY_IMAGE"/>
	    <channelMapping from="OUTPUT_IMAGE" to="GAUSS_IMAGE"/>
	    <config>
		    <output_format>GREY</output_format>
		    <filter>gauss</filter>
	    </config>
	</module>
	<module>
		<name>image_converter_sobelX</name>
		<libname>image_converter</libname>
		<libpath>image_converter</libpath>
	    <channelMapping from="INPUT_IMAGE" to="GAUSS_IMAGE"/>
	    <channelMapping from="OUTPUT_IMAGE" to="SOBELX_IMAGE"/>
	    <config>
		    <output_format>GREY</output_format>
		    <filter>sobelX</filter>
	    </config>
	</module>
	<module>
		<name>image_converter_sobelY</name>
		<libname>image_converter</libname>
		<libpath>image_converter</libpath>
	    <channelMapping from="INPUT_IMAGE" to="GAUSS_IMAGE"/>
	    <channelMapping from="OUTPUT_IMAGE" to="SOBELY_IMAGE"/>
	    <config>
		    <output_format>GREY</output_format>
		    <filter>sobelY</filter>
	    </config>
	</module>
	<module>
		<name>image_renderer_gauss</name>
		<writePriority>1</writePriority>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>
		<channelMapping from="IMAGE" to="GAUSS_IMAGE"/>
		<config>
		    <WINDOW>GAUSS_IMAGE_W</WINDOW>
		</config>
	</module>
	<module>
		<name>image_renderer_sobelX</name>
		<writePriority>1</writePriority>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>window
		<channelMapping from="IMAGE" to="SOBELX_IMAGE"/>
		<config>
		    <WINDOW>SOBELX_IMAGE_W</WINDOW>
		</config>
	</module>
	<module>
		<name>image_renderer_sobelY</name>
		<writePriority>1</writePriority>
		<libname>image_renderer</libname>
		<libpath>image_renderer</libpath>
		<channelMapping from="IMAGE" to="SOBELY_IMAGE"/>
		<config>
		    <WINDOW>SOBELY_IMAGE_W</WINDOW>
		</config>
	</module>
</framework>
